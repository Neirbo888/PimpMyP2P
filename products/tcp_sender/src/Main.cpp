/*
 ==============================================================================
 
 This file was auto-generated by the Introjucer!
 
 It contains the basic startup code for a Juce application.
 
 ==============================================================================
 */

#include "JuceHeader.h"
#include "products/tcp_sender/src/core/tcpsender_processor.h"



//==============================================================================
class TcpSenderApplication  : public JUCEApplication
{
public:
  TcpSenderApplication() {}
  
  const String getApplicationName() override { return ProjectInfo::projectName; }
  const String getApplicationVersion() override { return ProjectInfo::versionString; }
  bool moreThanOneInstanceAllowed() override { return true; }
  
  //==============================================================================
  void initialise (const String& commandLine) override
  {
    _tcpTester = new TcpSenderProcessor();
  }
  
  void shutdown() override
  {
    // Add your application's shutdown code here..
  }
  
  //==============================================================================
  void systemRequestedQuit() override
  {
    // This is called when the app is being asked to quit: you can ignore this
    // request and let the app carry on running, or call quit() to allow the app to close.
    quit();
  }
  
  void anotherInstanceStarted (const String& commandLine) override
  {
    // When another instance of the app is launched while this one is running,
    // this method is invoked, and the commandLine parameter tells you what
    // the other instance's command-line arguments were.
  }
  
private:
  ScopedPointer<TcpSenderProcessor> _tcpTester;
};

//==============================================================================
// This macro generates the main() routine that launches the app.
START_JUCE_APPLICATION (TcpSenderApplication)
